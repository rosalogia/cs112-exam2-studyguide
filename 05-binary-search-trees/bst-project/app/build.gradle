/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'com.adarshr.test-logger' version '2.1.1'
}

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
    mavenCentral()
}

ext.junitPlatformVersion = '1.7.1'
ext.junitJupiterVersion = '5.7.1'

compileTestJava {
    options.compilerArgs += '-parameters'
}

compileJava.options.encoding = 'utf-8'
compileTestJava.options.encoding = 'utf-8'

dependencies {
    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.7.1'

    testImplementation 'org.junit.platform:junit-platform-reporting:${junitPlatformVersion}'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    testImplementation "org.assertj:assertj-core:3.12.2"
}

application {
    // Define the main class for the application.
    mainClass = 'bst.Main'
}

test {
    afterTest { desc, result ->
        logger.quiet "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
    }
}

run {
    standardInput = System.in
}

tasks.named('test') {
    // Use junit platform for unit tests.
    useJUnitPlatform()
}
